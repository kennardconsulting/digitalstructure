// Metawidget 3.4-SNAPSHOT minified (licensed under LGPL)
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

(function(){angular.module("metawidget",[]).directive("metawidget",["$compile","$parse",function(a,b){return{restrict:"E",scope:{ngModel:"=",readOnly:"=",config:"=",configs:"&"},transclude:true,compile:function c(f,e,d){return function(j,i,h){var l=new metawidget.angular.AngularMetawidget(i,h,d,j,a,b);
var k=undefined;
g();
j.$watch("ngModel",function(n,m){if(n!==k&&typeof(n)==="object"){l.invalidateInspection();
g()
}});
j.$watch("readOnly",function(n,m){if(n!==l.readOnly){g()
}});
j.$watch("config",function(n,m){if(n!==m){l.configure(n);
g()
}});
function g(){try{k=j.$eval("ngModel");
l.path=h.ngModel;
l.toInspect=j.$parent.$eval(metawidget.util.splitPath(l.path).type);
l.readOnly=j.$eval("readOnly");
l.buildWidgets()
}catch(m){
throw m
}}}
}}
}]);
metawidget.angular=metawidget.angular||{};
metawidget.angular.AngularMetawidget=function(e,b,a,f,d,g){if(!(this instanceof metawidget.angular.AngularMetawidget)){throw new Error("Constructor called as a function")
}var c=new metawidget.Pipeline(e[0]);
c.buildNestedMetawidget=function(i,k){var j=document.createElement("metawidget");
j.setAttribute("to-inspect",b.toInspect+"."+i.name);
if(metawidget.util.isTrueOrTrueString(i.readOnly)){j.setAttribute("read-only","true")
}else{j.setAttribute("read-only",b.readOnly)
}f.$parent._pipeline=c;
j.setAttribute("configs","_pipeline");
return j
};
c._superLayoutWidget=c.layoutWidget;
c.layoutWidget=function(l,i,k,j,m){c._superLayoutWidget(l,i,k,j,m);
if(l.overridden===undefined){d(l)(f.$parent)
}};
var h=undefined;
this.invalidateInspection=function(){h=undefined
};
c.inspector=new metawidget.inspector.PropertyTypeInspector();
c.inspectionResultProcessors=[new metawidget.angular.inspectionresultprocessor.AngularInspectionResultProcessor(f)];
c.widgetBuilder=new metawidget.widgetbuilder.CompositeWidgetBuilder([new metawidget.widgetbuilder.OverriddenWidgetBuilder(),new metawidget.widgetbuilder.ReadOnlyWidgetBuilder(),new metawidget.widgetbuilder.HtmlWidgetBuilder()]);
c.widgetProcessors=[new metawidget.widgetprocessor.IdProcessor(),new metawidget.angular.widgetprocessor.AngularWidgetProcessor(g,f)];
c.layout=new metawidget.layout.HeadingTagLayoutDecorator(new metawidget.layout.TableLayout());
this.configure=function(i){c.configure(i);
this.invalidateInspection()
};
this.configure(f.$eval("config"));
this.configure(f.configs());
this.inspect=function(k,i,j){return c.inspect(k,i,j,this)
};
this.buildWidgets=function(m){var i=a(f.$parent,function(n){return n
});
this.overriddenNodes=[];
for(var j=0;
j<i.length;
j++){var l=i[j];
if(l.nodeType===1&&(l.tagName!=="SPAN"||l.attributes.length>1)){this.overriddenNodes.push(l)
}}if(m!==undefined){h=m
}else{if(h===undefined){if(arguments.length>0){throw new Error("Calling buildWidgets( undefined ) may cause infinite loop. Check your argument, or pass no arguments instead")
}var k=metawidget.util.splitPath(this.path);
h=c.inspect(this.toInspect,k.type,k.names,this)
}}c.buildWidgets(h,this)
};
this.onEndBuild=function(){while(this.overriddenNodes.length>0){var j=this.overriddenNodes[0];
this.overriddenNodes.splice(0,1);
if(j.tagName==="FACET"){continue
}var m=undefined;
for(var o=0,k=j.attributes.length;
o<k;
o++){var l=j.attributes[o];
var n=b.$normalize(l.name).toLowerCase();
if(n==="ngbind"||n==="ngmodel"){var p=metawidget.util.splitPath(l.value);
var q=f.$parent.$eval(p.type);
m=c.inspect(q,p.type,p.names,this);
break
}}if(m===undefined){m={section:""}
}if(j.tagName==="STUB"){for(var o=0,k=j.attributes.length;
o<k;
o++){var i=j.attributes[o];
m[i.nodeName]=i.nodeValue
}}c.layoutWidget(j,"property",m,c.element,this)
}};
this.getElement=function(){return c.element
}
};
metawidget.angular.inspectionresultprocessor=metawidget.angular.inspectionresultprocessor||{};
metawidget.angular.inspectionresultprocessor.AngularInspectionResultProcessor=function(a){if(!(this instanceof metawidget.angular.inspectionresultprocessor.AngularInspectionResultProcessor)){throw new Error("Constructor called as a function")
}this.processInspectionResult=function(c,e){for(var b in c){var d=c[b];
if(d instanceof Object){this.processInspectionResult(d,e);
continue
}if(d===undefined||d.slice===undefined){continue
}if(d.length<4||d.slice(0,2)!=="{{"||d.slice(d.length-2,d.length)!=="}}"){continue
}d=d.slice(2,d.length-2);
c[b]=a.$parent.$eval(d)+"";
a.$parent.$watch(d,function(g,f){if(g!==f){e.invalidateInspection();
e.buildWidgets()
}})
}return c
}
};
metawidget.angular.widgetprocessor=metawidget.angular.widgetprocessor||{};
metawidget.angular.widgetprocessor.AngularWidgetProcessor=function(c,a){if(!(this instanceof metawidget.angular.widgetprocessor.AngularWidgetProcessor)){throw new Error("Constructor called as a function")
}this.processWidget=function(h,m,g,l){var j=l.path;
if(m!=="entity"){j+="."+g.name
}if(h.tagName==="OUTPUT"){if(g.type==="array"){h.setAttribute("ng-bind",j+".join(', ')")
}else{if(g.enumTitles!==undefined){a.$parent._mwLookupEnumTitle=a.$parent._mwLookupEnumTitle||{};
a.$parent._mwLookupEnumTitle[j]=function(){return b(j,g["enum"],g.enumTitles)
};
h.setAttribute("ng-bind",'_mwLookupEnumTitle["'+j+'"]()')
}else{h.setAttribute("ng-bind",j)
}}}else{if(h.tagName==="BUTTON"){h.setAttribute("ng-click",j+"()")
}else{if(g["enum"]!==undefined&&(g.type==="array"||g.componentType!==undefined)&&h.tagName==="DIV"){for(var i=0,f=h.childNodes.length;
i<f;
i++){var k=h.childNodes[i];
if(k.tagName==="LABEL"&&k.childNodes.length===2){var e=k.childNodes[0];
if(e.tagName==="INPUT"){if(e.getAttribute("type")==="radio"){e.setAttribute("ng-model",j)
}else{if(e.getAttribute("type")==="checkbox"){e.setAttribute("ng-checked",j+".indexOf('"+e.getAttribute("value")+"')>=0");
a.$parent._mwUpdateSelection=d;
e.setAttribute("ng-click","_mwUpdateSelection($event,'"+j+"')")
}}}}}}else{h.setAttribute("ng-model",j)
}}}if(g.required!==undefined){h.setAttribute("ng-required",g.required)
}if(g.minLength!==undefined){h.setAttribute("ng-minlength",g.minLength)
}if(g.maxLength!==undefined){h.setAttribute("ng-maxlength",g.maxLength);
h.removeAttribute("maxlength")
}return h
};
function d(e,i){var g=a.$parent.$eval(i);
if(g===undefined){g=[];
c(i).assign(a.$parent,g)
}var h=e.target;
var f=g.indexOf(h.value);
if(h.checked===true){if(f===-1){g.push(h.value)
}return
}if(f!==-1){g.splice(f,1)
}}function b(i,h,e){var g=a.$parent.$eval(i);
var f=h.indexOf(g);
if(f===-1){return g
}return e[f]
}}
})();